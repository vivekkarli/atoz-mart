services:
  cart:
    image: "vivekkarli/cart:v1"
    container_name: "cart-service"
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      cartdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_APPLICATION_NAME: cart-service
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: "jdbc:mysql://cartdb:3306/cartdb"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      OTEL_SERVICE_NAME: cart-service
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"

  catalog:
    image: "vivekkarli/catalog:v1"
    container_name: "catalog-service"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      catalogdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: "jdbc:mysql://catalogdb:3306/catalogdb"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      SPRING_APPLICATION_NAME: catalog-service
      OTEL_SERVICE_NAME: catalog-service
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"

  wishlist:
    image: "vivekkarli/wishlist:v1"
    container_name: "wishlist-service"
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      wishlistdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: "jdbc:mysql://wishlistdb:3306/wishlistdb"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      SPRING_APPLICATION_NAME: wishlist-service
      OTEL_SERVICE_NAME: wishlist-service
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"
  
  notification:
    image: "vivekkarli/notification-service:v1"
    container_name: "notification-service"
    healthcheck:
      test: "curl --fail --silent localhost:8083/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      rabbitmq:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_APPLICATION_NAME: notification-service
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      OTEL_SERVICE_NAME: notification-service
      OTEL_EXPORTER_OTLP_ENDPOINT: http://tempo:4318
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"
      SPRING_RABBITMQ_HOST: rabbitmq

  order:
    image: "vivekkarli/order:v1"
    container_name: "order-service"
    healthcheck:
      test: "curl --fail --silent localhost:8084/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      orderdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_APPLICATION_NAME: order-service
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: "jdbc:mysql://orderdb:3306/orderdb"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      OTEL_SERVICE_NAME: order-service
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"
      SPRING_RABBITMQ_HOST: rabbitmq

  profile:
    image: "vivekkarli/profile:v1"
    container_name: "profile-service"
    healthcheck:
      test: "curl --fail --silent localhost:8085/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      profiledb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_APPLICATION_NAME: profile-service
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: "jdbc:mysql://profiledb:3306/profiledb"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      OTEL_SERVICE_NAME: profile-service
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"
      SPRING_RABBITMQ_HOST: rabbitmq
      
  configserver:
    image: "vivekkarli/configserver:v1"
    container_name: "atozmart-configserver"
    ports:
      - 8070:8070
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: 'main'
      
  eurekaserver:
    image: "vivekkarli/eurekaserver:v1"
    container_name: "atozmart-eurekaserver"
    ports:
      - 8761:8761
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      
  gatewayserver:
    image: "vivekkarli/gatewayserver:v1"
    container_name: "atozmart-gatewayserver"
    ports:
      - 8072:8072
    healthcheck:
      test: "curl --fail --silent localhost:8072/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      cart:
        condition: service_healthy
      catalog:
        condition: service_healthy
      atozmart-authserver:
        condition: service_healthy
      wishlist:
        condition: service_healthy
      notification:
        condition: service_healthy
      profile:
        condition: service_healthy
      order:
        condition: service_healthy
      #authserver:
        #condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: "http://keycloak-authserver:8080/realms/master/protocol/openid-connect/certs"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      SPRING_APPLICATION_NAME: atozmart-gatewayserver
      OTEL_SERVICE_NAME: atozmart-gatewayserver
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"
      ATOZMART_AUTH_AUTHORIZE-ENDPOINT: "http://atozmart-authserver:8074/authorize"

  keycloak-authserver:
    image: "quay.io/keycloak/keycloak:latest"
    container_name: "keycloak-authserver"
    ports:
      - 8073:8080
    #healthcheck:
      #test: "curl --fail --silent http://localhost:8080/realms/master || exit 1"
      #interval: 10s
      #timeout: 5s
      #retries: 10
      #start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: "keycloak_admin"
      KC_BOOTSTRAP_ADMIN_PASSWORD: "admin"
    command: "start-dev"

  atozmart-authserver:
    image: "vivekkarli/atozmart-authserver:v1"
    container_name: "atozmart-authserver"
    healthcheck:
      test: "curl --fail --silent localhost:8074/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      atozmart-authserver-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart
    environment:
      SPRING_APPLICATION_NAME: atozmart-authserver
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8070"
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: "jdbc:mysql://atozmart-authserver-db:3306/atozmart_authserver_db"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eurekaserver:8761/eureka"
      OTEL_SERVICE_NAME: atozmart-authserver
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4318"
      OTEL_LOGS_EXPORTER: none
      OTEL_METRICS_EXPORTER: none
      OTEL_TRACES_EXPORTER: otlp
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.13.2.jar"
      SPRING_RABBITMQ_HOST: rabbitmq

  rabbitmq:
    image: "rabbitmq:4.0-management"
    container_name: "rabbitmq"
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - atozmart

  catalogdb:
    image: mysql:latest
    container_name: catalogdb
    ports:
      - 3307:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: catalogdb
    networks:
      - atozmart

  cartdb:
    image: mysql:latest
    container_name: cartdb
    ports:
      - 3308:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cartdb
    networks:
      - atozmart

  wishlistdb:
    image: mysql:latest
    container_name: wishlistdb
    ports:
      - 3309:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wishlistdb
    networks:
      - atozmart
  
  atozmart-authserver-db:
    image: mysql:latest
    container_name: atozmart-authserver-db
    ports:
      - 3310:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: atozmart_authserver_db
    networks:
      - atozmart
      
  orderdb:
    image: mysql:latest
    container_name: orderdb
    ports:
      - 3311:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orderdb
    networks:
      - atozmart

  profiledb:
    image: mysql:latest
    container_name: profiledb
    ports:
      - 3312:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: profiledb
    networks:
      - atozmart

  read:
    image: grafana/loki:latest
    command: "-config.file=/etc/loki/config.yaml -target=read"
    ports:
      - 3101:3100
      - 7946
      - 9095
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
    depends_on:
      - minio
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: &loki-dns
      atozmart:
        aliases:
          - loki

  write:
    image: grafana/loki:latest
    command: "-config.file=/etc/loki/config.yaml -target=write"
    ports:
      - 3102:3100
      - 7946
      - 9095
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - minio
    networks:
      <<: *loki-dns

  alloy:
    image: grafana/alloy:latest
    volumes:
      - ./alloy-local-config.yaml:/etc/alloy/config.alloy:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command:  run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    ports:
      - 12345:12345
    depends_on:
      - gateway
    networks:
      - atozmart

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - 9000
    volumes:
      - ./.data/minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - atozmart
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - atozmart
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo
      
  tempo:
    image: *tempoImage
    container_name: tempo
    command: ["-config.file=/var/tempo.yml"]
    ports:
      - "3200:3200" # Tempo HTTP port
      - "4317:4317" # OTLP gRPC port
      - "4318:4318" # OTLP HTTP port
      - "14268:14268" # Jaeger port
    volumes:
      - ./tempo-data:/var/tempo
      - ./tempo.yml:/var/tempo.yml
    depends_on:
      - init
    networks:
      - atozmart

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
    depends_on:
      - gateway
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    entrypoint:
      - sh
      - -euc
      - |
        /run.sh
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - atozmart

  backend:
    image: grafana/loki:latest
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/config.yaml -target=backend -legacy-read-mode=false"
    depends_on:
      - gateway
    networks:
      - atozmart
    

  gateway:
    image: nginx:latest
    depends_on:
      - read
      - write
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /etc/nginx/nginx.conf
        user  nginx;
        worker_processes  5;  ## Default: 1

        events {
          worker_connections   1000;
        }

        http {
          resolver 127.0.0.11;

          server {
            listen             3100;

            location = / {
              return 200 'OK';
              auth_basic off;
            }

            location = /api/prom/push {
              proxy_pass       http://write:3100\$$request_uri;
            }

            location = /api/prom/tail {
              proxy_pass       http://read:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }

            location ~ /api/prom/.* {
              proxy_pass       http://read:3100\$$request_uri;
            }

            location = /loki/api/v1/push {
              proxy_pass       http://write:3100\$$request_uri;
            }

            location = /loki/api/v1/tail {
              proxy_pass       http://read:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }

            location ~ /loki/api/.* {
              proxy_pass       http://read:3100\$$request_uri;
            }
          }
        }
        EOF
        /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - "3100:3100"
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - atozmart
      
networks:
  atozmart:
    driver: bridge
